# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Town {
  gameInstance: GameInstance!
  name: String!
  gold: Float!
  visitedUsers: [GameUser!]!
  currentPlayers: [GameUser!]!
  Edges: [Edge!]!
}

type Edge {
  town: Town!
  edgeType: String!
  spells: [MagicSpell!]!
  counter: [TransporationCounter!]!
  goldPiece: [GoldPiece!]!
  obstacle: [Obstacle!]!
}

type GS {
  name: String!
  displayname: String!
}

type GSDetail {
  name: String!
  displayname: String!
  location: String!
  maxSessionPlayers: String!
  minSessionPlayers: String!
  webSupport: Boolean!
}

type SaveGame {
  game: GSDetail!
  players: String!
  savegameid: String!
}

type GameInstance {
  name: String!
  players: [GameUser!]!
  lobbyName: String!
  currentPhase: String!
  numOfPlayers: Float!
  startingPlayer: GameUser!
  ownableUnits: [OwnableUnit!]!
  towns: [Town!]!
}

type OwnableUnit {
  id: String!
  game: GameInstance!
  user: [GameUser!]!
}

type ItemUnit {
  id: String!
  game: GameInstance!
  user: [GameUser!]!
  bid: Bid!
}

type MagicSpell {
  id: String!
  game: GameInstance!
  user: [GameUser!]!
  bid: Bid!
  spellType: String!
  edge: Edge!
}

type TransporationCounter {
  id: String!
  game: GameInstance!
  user: [GameUser!]!
  bid: Bid!
  counterType: String!
  edge: Edge!
}

type GoldPiece {
  id: String!
  game: GameInstance!
  user: [GameUser!]!
  bid: Bid!
  amount: Float!
  edge: Edge!
}

type Obstacle {
  id: String!
  game: GameInstance!
  user: [GameUser!]!
  bid: Bid!
  obstacleType: String!
  edge: Edge!
}

type Bid {
  item: ItemUnit!
  bidAmount: Float!
  players: GameUser!
}

type LSUser {
  name: String!
  preferredColour: String!
  role: String!
}

type GameUser {
  name: String!
  game: GameInstance!
  coins: Float!
  color: String!
  visitedTowns: [Town!]!
  currentTown: Town!
  ownableUnits: [OwnableUnit!]!
  bids: [Bid!]!
}

type AuthInfo {
  access_token: String!
  token_type: String!
  refresh_token: String!
  expires_in: Float!
  scope: String!
  lsUser: LSUser!
}

type GameSession {
  creator: String!
  gameParameters: GSDetail!
  launched: Boolean!
  players: [LSUser!]!
  savegameid: String!
}

type Query {
  sayHello: String!
  getOnline: String!
  verifyLSUser(password: String!, username: String!, grand_type: String!): AuthInfo!
  LSUser(access_token: String!): LSUser!
  AllGameServices: [GS!]!
  GameServiceDetail(name: String!): GSDetail!
  SaveGames(access_token: String!, name: String!): [SaveGame!]!
  SaveGame(access_token: String!, savegameid: String!, name: String!): SaveGame!
  AllSessions: String!
  Session(session_id: String!): GameSession!
}

type Mutation {
  createLSUser(role: String!, preferredColour: String!, password: String!, name: String!): String!
  modifyLSUserColor(colour: String!, access_token: String!, name: String!): String!
  changeLSUserPassword(newPassword: String!, oldPassword: String!, access_token: String!, name: String!): String!
  registerGameService(webSupport: String!, displayname: String!, name: String!, minSessionPlayers: String!, maxSessionPlayers: String!, location: String!): String!
  deleteGameService(access_token: String!, name: String!): String!
  registerSaveGame(players: String!, access_token: String!, savegameid: String!, name: String!): String!
  createSession(savegame: String, game: String, creator: String, access_token: String!): String!
  joinSession(access_token: String!, name: String!, session_id: String!): String!
  exitSession(access_token: String!, name: String!, session_id: String!): String!
}
